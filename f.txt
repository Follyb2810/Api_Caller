using you experise as software devloper i want to have forn fiedl whch i can use to upload image and document like pdf,doc or anty file so add like the multipart that will have multiple image and text im a form.
so create a form section beside the json that will be multipart and I can add and remove the input and the type can be to accept file In images,pdf,docs or text
import { EditorState } from '@codemirror/state';
import { EditorView, keymap } from '@codemirror/view';
import { indentWithTab } from '@codemirror/commands';
import { json } from '@codemirror/lang-json';

const jsonRequestBody = document.querySelector('[data-json-request-body]');
const jsonResponseBody = document.querySelector('[data-json-response-body]');

export default function setupEditor() {
    // Define a simple set of extensions instead of using basicSetup
    const basicExtensions = [
        keymap.of([indentWithTab]),
        json(),
        EditorState.tabSize.of(2)
    ];

    const requestEditor = new EditorView({
        state: EditorState.create({
            doc: "{\n\t\n}",
            extensions: basicExtensions
        }),
        parent: jsonRequestBody
    });

    const responseEditor = new EditorView({
        state: EditorState.create({
            doc: "{}",
            extensions: [...basicExtensions, EditorView.editable.of(false)]
        }),
        parent: jsonResponseBody
    });

    function updateResponseEditor(value) {
        responseEditor.dispatch({
            changes: {
                from: 0,
                to: responseEditor.state.doc.length,
                insert: JSON.stringify(value, null, 2)
            }
        });
    }

    return { requestEditor, updateResponseEditor };
}
import 'bootstrap'
import 'bootstrap/dist/css/bootstrap.min.css'
import 'bootstrap'
import 'bootstrap/dist/css/bootstrap.min.css'
import axios from 'axios'
import prettyBytes from 'pretty-bytes'
import setupEditor from './setupEditor'


const form = document.querySelector('[data-form]')
const queryParamsContainer = document.querySelector('[data-query-params]')
const requestHeadersContainer = document.querySelector('[data-request-headers]')
const jsonContainer = document.querySelector('[data-json-request-body]')
const keyValueTemplate = document.querySelector('[data-key-value-template]')
const addQueryParamsBtn = document.querySelector('[data-add-query-param-btn]')
const addRequestHeadersBtn = document.querySelector('[data-add-request-headers-btn]')
const dataResponseSection = document.querySelector('[data-response-section]')
const ResponseHeaderContainer = document.querySelector('[data-response-headers]')
const ResponseStatus = document.querySelector('[data-status]')
const ResponseTime = document.querySelector('[data-time]')
const ResponseSize = document.querySelector('[data-size]')


addQueryParamsBtn.addEventListener('click',(e)=>{
    queryParamsContainer.append(CreateKeyValuePair())
})
addRequestHeadersBtn.addEventListener('click',(e)=>{
    requestHeadersContainer.append(CreateKeyValuePair())
})

axios.interceptors.request.use(request =>{
    request.customData = request.customData ||{}
    request.customData.startTime = new Date().getTime()
    return request  
})

function updateEndTime(response){
    response.customData = response.customData || {}
    response.customData.time = new Date().getTime() - response.config.customData.startTime
    return response
}
axios.interceptors.response.use(updateEndTime,e=>{
   return Promise.reject(updateEndTime(e.response))
})

const {requestEditor,updateResponseEditor} = setupEditor()

form.addEventListener('submit',(e)=>{
    e.preventDefault()
    
    let data;
    try {
        data  = JSON.parse(requestEditor.state.doc.toString() || null)
    } catch (error) {
        alert('json data is malforme')
        return
    }
    axios({
        url:document.querySelector('[data-url]').value,
        method:document.querySelector('[data-method]').value,
        params:keyValuePairsToObject(queryParamsContainer),
        headers:keyValuePairsToObject(requestHeadersContainer),
        data,
    })
    .catch((e)=>e)
    .then((response)=>{
        dataResponseSection.classList.remove('d-none')
        updateResponseDetails(response)
        updateResponseEditor(response.data)
        updateResponseHeaders(response.headers)
        console.log(response)
    })
})

function updateResponseDetails(response){
    ResponseStatus.textContent = response.status
    ResponseTime.textContent = response.customData.time
    ResponseSize.textContent = prettyBytes(JSON.stringify(response.data).length + JSON.stringify(response.headers).length)
}

function updateResponseHeaders(headers){
    ResponseHeaderContainer.innerHTML = ''
    Object.entries(headers).forEach(([key,value])=>{
        const keyElement = document.createElement('div')
        keyElement.textContent = key;
        ResponseHeaderContainer.append(keyElement)
        const valueElement = document.createElement('div')
        valueElement.textContent = value;
        ResponseHeaderContainer.append(valueElement)
    })
}

function keyValuePairsToObject(container){
    const pairs = container.querySelectorAll('[data-key-value-pair]')
    console.log(pairs,'pairs')
    return [...pairs].reduce((data,pair)=>{
        const key = pair.querySelector('[data-key]').value       
        const value = pair.querySelector('[data-value]').value
        console.log(key,'key')
        console.log(value,'value')
        console.log(data,'data')
        if(key == '') return data;
        return {...data,[key]:value}       
    },{})
}

function CreateKeyValuePair(){
    const element = keyValueTemplate.content.cloneNode(true)
    element.querySelector('[data-remove-btn]').addEventListener('click',(e)=>{
        e.target.closest('[data-key-value-pair]').remove()
    })
    return element;
}
queryParamsContainer.append(CreateKeyValuePair())
requestHeadersContainer.append(CreateKeyValuePair())
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>API Caller</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="script.js" type="module"></script>
</head>
<body>
    <div class="p-4">
        <form action="" data-form>
            <div class="input-group mb-4">
                <select name="" id="" class="form-select flex-grow-0 w-auto" data-method >
                    <option value="GET" selected>GET</option>
                    <option value="POST">POST</option>
                    <option value="PUT">PUT</option>
                    <option value="DELETE">DELETE</option>
                    <option value="PATCH">PATCH</option>
                </select>
                <input type="url" data-url  placeholder="https://folly.com" required class="form-control">
                <button type="submit" class="btn btn-primary">Send</button>
            </div>
            <ul class="nav nav-tabs" role="tablist">
                <li class="nav-item" role="presentation">
                    <button class="btn btn-primary nav-link active" 
                        id="query-params-tabs" data-bs-toggle="tab" data-bs-target="#query-params" 
                        role="tab" aria-controls="query-params" aria-selected="true" type="button">Query Params</button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="btn btn-primary nav-link" 
                        id="request-headers-tabs" data-bs-toggle="tab" data-bs-target="#request-headers" 
                        role="tab" aria-controls="request-headers" aria-selected="false" type="button">Header</button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="btn btn-primary nav-link" 
                        id="json-tabs" data-bs-toggle="tab" data-bs-target="#json" 
                        role="tab" aria-controls="json" aria-selected="false" type="button">Json</button>
                </li>
            </ul>
            <div class="tab-content p-3 border-0">
                <div class="tab-pane fade show active" role="tabpanel" aria-labelledby="query-params-tabs" id="query-params">
                    <div data-query-params></div>
                    <button type="button" data-add-query-param-btn class="mt-2 btn btn-outline-success">Add Params</button>
                </div> 
                <div class="tab-pane fade" role="tabpanel" aria-labelledby="request-headers-tabs" id="request-headers">
                    <div data-request-headers></div>
                    <button type="button" data-add-request-headers-btn class="mt-2 btn btn-outline-success">Add Header</button>
                </div> 
                <div class="tab-pane fade" role="tabpanel" aria-labelledby="json-tabs" id="json">
                    <div data-json-request-body class="overflow-auto" style="max-height: 200px;"></div>
                </div> 
            </div>
        </form>
        <div class="mt-5 d-none" data-response-section>
            <h3>Response</h3>
            <div class="d-flex my-2">
                <div class="me-3">
                    Status: <span data-status></span>
                </div>
                <div class="me-3">
                    Time: <span data-time></span>ms
                </div>
                <div class="me-3">
                    Size: <span data-size></span>
                </div>
            </div>
            <ul class="nav nav-tabs" role="tablist">
                <li class="nav-item" role="presentation">
                    <button class="btn btn-primary nav-link active" 
                        id="body-tabs" data-bs-toggle="tab" data-bs-target="#body" 
                        role="tab" aria-controls="body" aria-selected="true" type="button">Body</button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="btn btn-primary nav-link" 
                        id="response-headers-tabs" data-bs-toggle="tab" data-bs-target="#response-headers" 
                        role="tab" aria-controls="response-headers" aria-selected="false" type="button">Header</button>
                </li>
            </ul>
            <div class="tab-content p-3 border-0">
                <div class="tab-pane fade show active" role="tabpanel" aria-labelledby="body-tabs" id="body">
                    <div class="overflow-auto" data-json-response-body style="max-height: 200px;"></div>
                </div> 
                <div class="tab-pane fade" role="tabpanel" aria-labelledby="response-headers-tabs" id="response-headers">
                    <div style="display: grid;grid-template-columns:auto 1fr;gap: 1rem 2rem;" data-response-headers></div>
                </div> 
                
            </div>
        </div>
    </div>
    <template data-key-value-template>
        <div class="input-group my-2" data-key-value-pair>
            <input type="text" data-key class="form-control" placeholder="key">
            <input type="text" data-value class="form-control" placeholder="value">
            <button type="button" data-remove-btn class="btn btn-outline-danger">Remove</button>
        </div>
    </template>
    
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>


<!-- <!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>API Caller</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="script.js" type="module"></script>
</head>
<body>
    <div class="p-4">
        <form action="" data-form>
            <div class="input-group mb-4">
                <select name="" id="" class="form-select flex-grow-0 w-auto" data-method >
                    <option value="GET" selected>GET</option>
                    <option value="POST">POST</option>
                    <option value="PUT">PUT</option>
                    <option value="DELETE">DELETE</option>
                    <option value="PATCH">PATCH</option>
                </select>
                <input type="url" data-url  placeholder="https://folly.com" required class="form-control">
                <button type="submit" class="btn btn-primary">Send</button>
            </div>
            <ul class="nav nav-tabs" role="tablist">
                <li class="nav-item" role="presentation">
                    <button class="btn btn-primary nav-link active" 
                        id="query-params-tabs" data-bs-toggle="tab" data-bs-target="#query-params" 
                        role="tab" aria-controls="query-params" aria-selected="true" type="button">Query Params</button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="btn btn-primary nav-link" 
                        id="request-headers-tabs" data-bs-toggle="tab" data-bs-target="#request-headers" 
                        role="tab" aria-controls="request-headers" aria-selected="false" type="button">Header</button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="btn btn-primary nav-link" 
                        id="json-tabs" data-bs-toggle="tab" data-bs-target="#json" 
                        role="tab" aria-controls="json" aria-selected="false" type="button">Json</button>
                </li>
            </ul>
            <div class="tab-content p-3 border-0">
                <div class="tab-pane fade show active" role="tabpanel" aria-labelledby="query-params-tabs" id="query-params">
                    <div data-query-params></div>
                    <button type="button" data-add-query-param-btn class="mt-2 btn btn-outline-success">Add Params</button>
                </div> 
                <div class="tab-pane fade" role="tabpanel" aria-labelledby="request-headers-tabs" id="request-headers">
                    <div data-request-headers></div>
                    <button type="button" data-add-request-headers-btn class="mt-2 btn btn-outline-success">Add Header</button>
                </div> 
                <div class="tab-pane fade" role="tabpanel" aria-labelledby="json-tabs" id="json">
                    <div data-json-request-body class="overflow-auto" style="max-height: 200px;"></div>
                </div> 
            </div>
        </form>
        <div class="mt-5 d-none" data-response-section>
            <h3>Response</h3>
            <div class="d-flex my-2">
                <div class="me-3">
                    Status: <span data-status></span>
                </div>
                <div class="me-3">
                    Time: <span data-time></span>ms
                </div>
                <div class="me-3">
                    Size: <span data-size></span>
                </div>
            </div>
            <ul class="nav nav-tabs" role="tablist">
                <li class="nav-item" role="presentation">
                    <button class="btn btn-primary nav-link active" 
                        id="body-tabs" data-bs-toggle="tab" data-bs-target="#body" 
                        role="tab" aria-controls="body" aria-selected="true" type="button">Body</button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="btn btn-primary nav-link" 
                        id="response-headers-tabs" data-bs-toggle="tab" data-bs-target="#response-headers" 
                        role="tab" aria-controls="response-headers" aria-selected="false" type="button">Header</button>
                </li>
            </ul>
            <div class="tab-content p-3 border-0">
                <div class="tab-pane fade show active" role="tabpanel" aria-labelledby="body-tabs" id="body">
                    <div class="overflow-auto" data-json-response-body style="max-height: 200px;"></div>
                </div> 
                <div class="tab-pane fade" role="tabpanel" aria-labelledby="response-headers-tabs" id="response-headers">
                    <div style="display: grid;grid-template-columns:auto 1fr;gap: 1rem 2rem;" data-response-headers></div>
                </div> 
                
            </div>
        </div>
    </div>
    <template data-key-value-template>
        <div class="input-group my-2" data-key-value-pair>
            <input type="text" data-key class="form-control" placeholder="key">
            <input type="text" data-value class="form-control" placeholder="value">
            <button type="button" data-remove-btn class="btn btn-outline-danger">Remove</button>
        </div>
    </template>
    
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html> -->


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>API Caller</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="script.js" type="module"></script>
</head>
<body>
    <div class="p-4">
        <form action="" data-form enctype="multipart/form-data">
            <div class="input-group mb-4">
                <select name="" id="" class="form-select flex-grow-0 w-auto" data-method>
                    <option value="GET" selected>GET</option>
                    <option value="POST">POST</option>
                    <option value="PUT">PUT</option>
                    <option value="DELETE">DELETE</option>
                    <option value="PATCH">PATCH</option>
                </select>
                <input type="url" data-url placeholder="https://example.com" required class="form-control">
                <button type="submit" class="btn btn-primary">Send</button>
            </div>
            <ul class="nav nav-tabs" role="tablist">
                <li class="nav-item" role="presentation">
                    <button class="btn btn-primary nav-link active" 
                        id="query-params-tabs" data-bs-toggle="tab" data-bs-target="#query-params" 
                        role="tab" aria-controls="query-params" aria-selected="true" type="button">Query Params</button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="btn btn-primary nav-link" 
                        id="request-headers-tabs" data-bs-toggle="tab" data-bs-target="#request-headers" 
                        role="tab" aria-controls="request-headers" aria-selected="false" type="button">Header</button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="btn btn-primary nav-link" 
                        id="json-tabs" data-bs-toggle="tab" data-bs-target="#json" 
                        role="tab" aria-controls="json" aria-selected="false" type="button">Json</button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="btn btn-primary nav-link" 
                        id="multipart-tabs" data-bs-toggle="tab" data-bs-target="#multipart" 
                        role="tab" aria-controls="multipart" aria-selected="false" type="button">Multipart</button>
                </li>
            </ul>
            <div class="tab-content p-3 border-0">
                <div class="tab-pane fade show active" role="tabpanel" aria-labelledby="query-params-tabs" id="query-params">
                    <div data-query-params></div>
                    <button type="button" data-add-query-param-btn class="mt-2 btn btn-outline-success">Add Params</button>
                </div> 
                <div class="tab-pane fade" role="tabpanel" aria-labelledby="request-headers-tabs" id="request-headers">
                    <div data-request-headers></div>
                    <button type="button" data-add-request-headers-btn class="mt-2 btn btn-outline-success">Add Header</button>
                </div> 
                <div class="tab-pane fade" role="tabpanel" aria-labelledby="json-tabs" id="json">
                    <div data-json-request-body class="overflow-auto" style="max-height: 200px;"></div>
                </div> 
                <div class="tab-pane fade" role="tabpanel" aria-labelledby="multipart-tabs" id="multipart">
                    <div data-multipart-fields></div>
                    <button type="button" data-add-multipart-field class="mt-2 btn btn-outline-success">Add Field</button>
                </div> 
            </div>
        </form>
        <div class="mt-5 d-none" data-response-section>
            <h3>Response</h3>
            <div class="d-flex my-2">
                <div class="me-3">
                    Status: <span data-status></span>
                </div>
                <div class="me-3">
                    Time: <span data-time></span>ms
                </div>
                <div class="me-3">
                    Size: <span data-size></span>
                </div>
            </div>
            <ul class="nav nav-tabs" role="tablist">
                <li class="nav-item" role="presentation">
                    <button class="btn btn-primary nav-link active" 
                        id="body-tabs" data-bs-toggle="tab" data-bs-target="#body" 
                        role="tab" aria-controls="body" aria-selected="true" type="button">Body</button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="btn btn-primary nav-link" 
                        id="response-headers-tabs" data-bs-toggle="tab" data-bs-target="#response-headers" 
                        role="tab" aria-controls="response-headers" aria-selected="false" type="button">Header</button>
                </li>
            </ul>
            <div class="tab-content p-3 border-0">
                <div class="tab-pane fade show active" role="tabpanel" aria-labelledby="body-tabs" id="body">
                    <div class="overflow-auto" data-json-response-body style="max-height: 200px;"></div>
                </div> 
                <div class="tab-pane fade" role="tabpanel" aria-labelledby="response-headers-tabs" id="response-headers">
                    <div style="display: grid;grid-template-columns:auto 1fr;gap: 1rem 2rem;" data-response-headers></div>
                </div> 
            </div>
        </div>
    </div>
    <template data-key-value-template>
        <div class="input-group my-2" data-key-value-pair>
            <input type="text" data-key class="form-control" placeholder="key">
            <input type="text" data-value class="form-control" placeholder="value">
            <button type="button" data-remove-btn class="btn btn-outline-danger">Remove</button>
        </div>
    </template>
    <template data-multipart-field-template>
        <div class="input-group my-2" data-multipart-field>
            <select class="form-select" data-field-type>
                <option value="file">File</option>
                <option value="text">Text</option>
            </select>
            <input type="text" data-key class="form-control" placeholder="Field Name">
            <input type="file" data-file class="form-control d-none" accept="image/*, .pdf, .doc, .docx">
            <input type="text" data-text class="form-control d-none" placeholder="Enter text">
            <button type="button" data-remove-btn class="btn btn-outline-danger">Remove</button>
        </div>
    </template>
    
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>API Caller</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="script.js" type="module"></script>
</head>
<body>
    <div class="p-4">
        <form data-form enctype="multipart/form-data">
            <div class="input-group mb-4">
                <select class="form-select flex-grow-0 w-auto" data-method>
                    <option value="GET" selected>GET</option>
                    <option value="POST">POST</option>
                    <option value="PUT">PUT</option>
                    <option value="DELETE">DELETE</option>
                    <option value="PATCH">PATCH</option>
                </select>
                <input type="url" data-url placeholder="https://example.com" required class="form-control">
                <button type="submit" class="btn btn-primary">Send</button>
            </div>
            
            <!-- Tabs -->
            <ul class="nav nav-tabs" role="tablist">
                <li class="nav-item" role="presentation">
                    <button class="nav-link active" 
                        id="query-params-tab" data-bs-toggle="tab" data-bs-target="#query-params" 
                        role="tab" aria-controls="query-params" aria-selected="true" type="button">Query Params</button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link" 
                        id="request-headers-tab" data-bs-toggle="tab" data-bs-target="#request-headers" 
                        role="tab" aria-controls="request-headers" aria-selected="false" type="button">Headers</button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link" 
                        id="json-tab" data-bs-toggle="tab" data-bs-target="#json" 
                        role="tab" aria-controls="json" aria-selected="false" type="button">JSON</button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link" 
                        id="multipart-tab" data-bs-toggle="tab" data-bs-target="#multipart" 
                        role="tab" aria-controls="multipart" aria-selected="false" type="button">Multipart</button>
                </li>
            </ul>

            <!-- Tab Content -->
            <div class="tab-content p-3 border-0">
                <div class="tab-pane fade show active" id="query-params" role="tabpanel" aria-labelledby="query-params-tab">
                    <div data-query-params></div>
                    <button type="button" data-add-query-param-btn class="mt-2 btn btn-outline-success">Add Params</button>
                </div> 
                <div class="tab-pane fade" id="request-headers" role="tabpanel" aria-labelledby="request-headers-tab">
                    <div data-request-headers></div>
                    <button type="button" data-add-request-headers-btn class="mt-2 btn btn-outline-success">Add Header</button>
                </div> 
                <div class="tab-pane fade" id="json" role="tabpanel" aria-labelledby="json-tab">
                    <div data-json-request-body class="overflow-auto" style="max-height: 200px;"></div>
                </div> 
                <div class="tab-pane fade" id="multipart" role="tabpanel" aria-labelledby="multipart-tab">
                    <div data-multipart-fields></div>
                    <button type="button" data-add-multipart-field class="mt-2 btn btn-outline-success">Add Field</button>
                </div> 
            </div>
        </form>

        <!-- Response Section -->
        <div class="mt-5 d-none" data-response-section>
            <h3>Response</h3>
            <div class="d-flex my-2">
                <div class="me-3">
                    Status: <span data-status></span>
                </div>
                <div class="me-3">
                    Time: <span data-time></span> ms
                </div>
                <div class="me-3">
                    Size: <span data-size></span>
                </div>
            </div>

            <!-- Response Tabs -->
            <ul class="nav nav-tabs" role="tablist">
                <li class="nav-item" role="presentation">
                    <button class="nav-link active" 
                        id="body-tab" data-bs-toggle="tab" data-bs-target="#body" 
                        role="tab" aria-controls="body" aria-selected="true" type="button">Body</button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link" 
                        id="response-headers-tab" data-bs-toggle="tab" data-bs-target="#response-headers" 
                        role="tab" aria-controls="response-headers" aria-selected="false" type="button">Headers</button>
                </li>
            </ul>

            <!-- Response Tab Content -->
            <div class="tab-content p-3 border-0">
                <div class="tab-pane fade show active" id="body" role="tabpanel" aria-labelledby="body-tab">
                    <div class="overflow-auto" data-json-response-body style="max-height: 200px;"></div>
                </div> 
                <div class="tab-pane fade" id="response-headers" role="tabpanel" aria-labelledby="response-headers-tab">
                    <div style="display: grid; grid-template-columns: auto 1fr; gap: 1rem 2rem;" data-response-headers></div>
                </div> 
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>


// multipart
import 'bootstrap';
import 'bootstrap/dist/css/bootstrap.min.css';
import axios from 'axios';
import prettyBytes from 'pretty-bytes';
import { setupEditor } from './setupEditor';

const form = document.querySelector('[data-form]');
const queryParamsContainer = document.querySelector('[data-query-params]');
const requestHeadersContainer = document.querySelector('[data-request-headers]');
const jsonContainer = document.querySelector('[data-json-request-body]');
const keyValueTemplate = document.querySelector('[data-key-value-template]');
const addQueryParamsBtn = document.querySelector('[data-add-query-param-btn]');
const addRequestHeadersBtn = document.querySelector('[data-add-request-headers-btn]');
const dataResponseSection = document.querySelector('[data-response-section]');
const ResponseHeaderContainer = document.querySelector('[data-response-headers]');
const ResponseStatus = document.querySelector('[data-status]');
const ResponseTime = document.querySelector('[data-time]');
const ResponseSize = document.querySelector('[data-size]');
const multipartFieldsContainer = document.querySelector('[data-multipart-fields]');
const addMultipartFieldBtn = document.querySelector('[data-add-multipart-field]');
const multipartFieldTemplate = document.querySelector('[data-multipart-field-template]');

// Add dynamic multipart fields
addMultipartFieldBtn.addEventListener('click', () => {
    multipartFieldsContainer.append(createMultipartField());
});

// Create a new multipart field
function createMultipartField() {
    const element = multipartFieldTemplate.content.cloneNode(true);
    const fieldTypeSelect = element.querySelector('[data-field-type]');
    const fileInput = element.querySelector('[data-file]');
    const textInput = element.querySelector('[data-text]');

    fieldTypeSelect.addEventListener('change', () => {
        if (fieldTypeSelect.value === 'file') {
            fileInput.classList.remove('d-none');
            textInput.classList.add('d-none');
        } else {
            fileInput.classList.add('d-none');
            textInput.classList.remove('d-none');
        }
    });

    element.querySelector('[data-remove-btn]').addEventListener('click', (e) => {
        e.target.closest('[data-multipart-field]').remove();
    });

    return element;
}
const {requestEditor,updateResponseEditor} = setupEditor()
// Handle form submission
form.addEventListener('submit', (e) => {
    e.preventDefault();

    const formData = new FormData();

    // Add multipart fields to FormData
    multipartFieldsContainer.querySelectorAll('[data-multipart-field]').forEach(field => {
        const key = field.querySelector('[data-key]').value;
        const fieldType = field.querySelector('[data-field-type]').value;

        if (fieldType === 'file') {
            const file = field.querySelector('[data-file]').files[0];
            if (file) formData.append(key, file);
        } else {
            const text = field.querySelector('[data-text]').value;
            if (text) formData.append(key, text);
        }
    });

    // Add query params and headers
    const params = keyValuePairsToObject(queryParamsContainer);
    const headers = keyValuePairsToObject(requestHeadersContainer);

    axios({
        url: document.querySelector('[data-url]').value,
        method: document.querySelector('[data-method]').value,
        params,
        headers,
        data: formData,
    })
    .catch((e) => e)
    .then((response) => {
        dataResponseSection.classList.remove('d-none');
        updateResponseDetails(response);
        updateResponseEditor(response.data);
        updateResponseHeaders(response.headers);
        console.log(response);
    });
});

// end multipart